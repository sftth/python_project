apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "79"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"gitlab","app.kubernetes.io/name":"gitlab","app.kubernetes.io/type":"cicd"},"name":"gitlab","namespace":"cicd-gitlab"},"spec":{"progressDeadlineSeconds":600,"replicas":0,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app.kubernetes.io/component":"gitlab","app.kubernetes.io/name":"gitlab","app.kubernetes.io/type":"cicd"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"gitlab","app.kubernetes.io/name":"gitlab","app.kubernetes.io/type":"cicd"}},"spec":{"containers":[{"env":[{"name":"GITLAB_OMNIBUS_CONFIG","value":"postgresql['enable'] = false\ngitlab_rails['db_username'] = \"gitlab\"\ngitlab_rails['db_password'] = \"gitlab\"\ngitlab_rails['db_host'] = \"postgresql\"\ngitlab_rails['db_port'] = \"5432\"\ngitlab_rails['db_database'] = \"gitlabhq_production\"\ngitlab_rails['db_adapter'] = 'postgresql'\ngitlab_rails['db_encoding'] = 'utf8'\nredis['enable'] = false\ngitlab_rails['redis_host'] = 'redis'\ngitlab_rails['redis_port'] = '6379'\ngitlab_rails['gitlab_shell_ssh_port'] = 30022\nexternal_url 'http://10.244.252.41:30080'\n"}],"image":"nexus.nexus.svc.cluster.local:5000/gitlab/gitlab-ce","imagePullPolicy":"Always","name":"gitlab","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":443,"protocol":"TCP"},{"containerPort":22,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/opt/gitlab","name":"gitlab-volume","subPath":"data"},{"mountPath":"/var/log/gitlab","name":"gitlab-volume","subPath":"log"},{"mountPath":"/etc/gitlab","name":"gitlab-volume","subPath":"config"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30,"volumes":[{"name":"gitlab-volume","persistentVolumeClaim":{"claimName":"cicd-gitlab-data-pvc"}}]}}}}
    creationTimestamp: "2023-02-03T16:10:17Z"
    generation: 109
    labels:
      app.kubernetes.io/component: gitlab
      app.kubernetes.io/name: gitlab
      app.kubernetes.io/type: cicd
      k8slens-edit-resource-version: v1
    name: gitlab
    namespace: cicd-gitlab
    resourceVersion: "784032293"
    uid: 9b3e7516-4817-43cb-9a8f-b57c0631abcf
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: gitlab
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/type: cicd
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-03-04T08:27:46+07:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: gitlab
          app.kubernetes.io/name: gitlab
          app.kubernetes.io/type: cicd
      spec:
        containers:
        - env:
          - name: GITLAB_OMNIBUS_CONFIG
            value: |
              postgresql['enable'] = false
              gitlab_rails['db_username'] = "gitlab"
              gitlab_rails['db_password'] = "gitlab"
              gitlab_rails['db_host'] = "postgresql"
              gitlab_rails['db_port'] = "5432"
              gitlab_rails['db_database'] = "gitlabhq_production"
              gitlab_rails['db_adapter'] = 'postgresql'
              gitlab_rails['db_encoding'] = 'utf8'
              redis['enable'] = false
              gitlab_rails['redis_host'] = 'redis'
              gitlab_rails['redis_port'] = '6379'
              gitlab_rails['gitlab_shell_ssh_port'] = 30022
              external_url 'http://10.244.252.41:30080'
          - name: GITLAB_SKIP_UNMIGRATED_DATA_CHECK
            value: "true"
          - name: TZ
            value: Asia/Jakarta
          image: nexus.pajak.go.id:15000/gitlab/gitlab-ce:17.4.2-ce.0
          imagePullPolicy: Always
          name: gitlab
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          - containerPort: 22
            protocol: TCP
          resources:
            limits:
              cpu: "4"
              memory: 32Gi
            requests:
              cpu: "2"
              memory: 16Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/opt/gitlab
            name: gitlab-volume
            subPath: data
          - mountPath: /var/log/gitlab
            name: gitlab-volume
            subPath: log
          - mountPath: /etc/gitlab
            name: gitlab-volume
            subPath: config
          - mountPath: /dev/shm/gitlab/puma
            name: gitlab-volume
            subPath: puma
          - mountPath: /dev/shm/gitlab/sidekig
            name: gitlab-volume
            subPath: sidekig
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gitlab-volume
          persistentVolumeClaim:
            claimName: cicd-gitlab-data-pvc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-10-07T10:22:06Z"
      lastUpdateTime: "2025-03-04T01:27:50Z"
      message: ReplicaSet "gitlab-5b44b9b6d4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-01T00:23:53Z"
      lastUpdateTime: "2025-04-01T00:23:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 109
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "13"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"postgresql","app.kubernetes.io/name":"gitlab","app.kubernetes.io/type":"cicd"},"name":"postgresql","namespace":"cicd-gitlab"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app.kubernetes.io/component":"postgresql","app.kubernetes.io/name":"gitlab","app.kubernetes.io/type":"cicd"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"postgresql","app.kubernetes.io/name":"gitlab","app.kubernetes.io/type":"cicd"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_USER","value":"gitlab"},{"name":"POSTGRES_DB","value":"gitlabhq_production"},{"name":"POSTGRES_PASSWORD","value":"gitlab"}],"image":"postgres:14","imagePullPolicy":"Always","name":"postgresql","ports":[{"containerPort":5432,"name":"postgresql","protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"postgresql-volume"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30,"volumes":[{"name":"postgresql-volume","persistentVolumeClaim":{"claimName":"cicd-gitlab-postgres-pvc"}}]}}}}
    creationTimestamp: "2023-10-03T07:08:19Z"
    generation: 21
    labels:
      app.kubernetes.io/component: postgresql
      app.kubernetes.io/name: gitlab
      app.kubernetes.io/type: cicd
      k8slens-edit-resource-version: v1
    name: postgresql
    namespace: cicd-gitlab
    resourceVersion: "784032152"
    uid: 6588c79d-fb94-402f-83e8-a66ebb2c2c94
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: postgresql
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/type: cicd
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-02-16T15:57:37+07:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: postgresql
          app.kubernetes.io/name: gitlab
          app.kubernetes.io/type: cicd
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: gitlab
          - name: POSTGRES_DB
            value: gitlabhq_production
          - name: POSTGRES_PASSWORD
            value: gitlab
          image: nexus.pajak.go.id:15000/postgres:14
          imagePullPolicy: Always
          name: postgresql
          ports:
          - containerPort: 5432
            name: postgresql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 8Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresql-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-volume
          persistentVolumeClaim:
            claimName: cicd-gitlab-postgres-pvc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-10-03T07:08:19Z"
      lastUpdateTime: "2025-02-17T08:07:16Z"
      message: ReplicaSet "postgresql-7749984cf7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-01T00:23:13Z"
      lastUpdateTime: "2025-04-01T00:23:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 21
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "15"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"gitlab","app.kubernetes.io/type":"cicd"},"name":"redis","namespace":"cicd-gitlab"},"spec":{"progressDeadlineSeconds":600,"replicas":0,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"gitlab","app.kubernetes.io/type":"cicd"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"gitlab","app.kubernetes.io/type":"cicd"}},"spec":{"containers":[{"image":"nexus.nexus.svc.cluster.local:5000/redis","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379,"name":"redis","protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/data","name":"redis-volume"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30,"volumes":[{"name":"redis-volume","persistentVolumeClaim":{"claimName":"cicd-gitlab-redis-pvc"}}]}}}}
    creationTimestamp: "2023-02-03T16:10:17Z"
    generation: 35
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: gitlab
      app.kubernetes.io/type: cicd
      k8slens-edit-resource-version: v1
    name: redis
    namespace: cicd-gitlab
    resourceVersion: "784032133"
    uid: 3edc6545-0a65-44dc-b5fc-9deadee398ec
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: redis
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/type: cicd
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-02-16T15:57:39+07:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: redis
          app.kubernetes.io/name: gitlab
          app.kubernetes.io/type: cicd
      spec:
        containers:
        - image: nexus.pajak.go.id:15000/redis:7.2.4
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 8Gi
            requests:
              cpu: 500m
              memory: 4Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-volume
          persistentVolumeClaim:
            claimName: cicd-gitlab-redis-pvc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-02-03T16:10:17Z"
      lastUpdateTime: "2025-02-17T08:08:45Z"
      message: ReplicaSet "redis-5cf74489d9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-01T00:23:11Z"
      lastUpdateTime: "2025-04-01T00:23:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 35
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
